FROM twdps/circleci-remote-docker:alpine-stable

LABEL org.opencontainers.image.created="%%CREATED%%" \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.documentation="https://github.com/twplatformlabs/circleci-base-image" \
      org.opencontainers.image.source="https://github.com/twplatformlabs/circleci-base-image" \
      org.opencontainers.image.url="https://github.com/twplatformlabs/circleci-base-image" \
      org.opencontainers.image.version="%%VERSION%%" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.title="circleci-base-image" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image containing organizational base packages" \
      org.opencontainers.image.base.name="%%BASE%%"

ENV VAULT_VERSION=1.19.0
ENV BUILDEVENTS_VERSION=0.17.0

ENV MUSL_LOCPATH=/usr/share/i18n/locales/musl \
    LANG="C.UTF-8" \
    LANGUAGE="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# Configured for automatic, monthly build using current package repository release versions.
# Pin downstream executor builds to specific OS and package versions using YYYY.MM tag.
# hadolint ignore=DL3003,DL3004,DL3018
RUN apk add --no-cache \
        musl \
        musl-dev \
        musl-utils \
        build-base \
        tzdata \
        libintl \
        gettext-dev \
        gcc \
        g++ \
        cmake \
        make \
        openssl-dev \
        curl \
        wget \
        unzip \
        zip \
        bzip2 \
        sudo \
        docker \
        openrc \
        jq \
        gnupg \
        github-cli \
        git-lfs && \
    curl -s -o musl-locales-master.zip https://gitlab.com/rilian-la-te/musl-locales/-/archive/master/musl-locales-master.zip && \
    unzip musl-locales-master.zip && cd musl-locales-master && \
    cmake -DLOCALE_PROFILE=OFF -D CMAKE_INSTALL_PREFIX:PATH=/usr . && \
    make && make install && \
    cd .. && rm -r musl-locales-master* && \
    echo https://downloads.1password.com/linux/alpinelinux/stable/ >> /etc/apk/repositories && \
    curl -o /etc/apk/keys/support@1password.com-61ddfc31.rsa.pub https://downloads.1password.com/linux/keys/alpinelinux/support@1password.com-61ddfc31.rsa.pub && \
    apk update && apk add --no-cache 1password-cli && \
    curl -sL "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip" -o "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    unzip "vault_${VAULT_VERSION}_linux_amd64.zip" -d /usr/local/bin && \
    rm "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    curl -sL "https://github.com/honeycombio/buildevents/releases/download/v${BUILDEVENTS_VERSION}/buildevents-linux-amd64" -o buildevents && \
    chmod +x buildevents && \
    mv buildevents /usr/local/bin/buildevents && \
    addgroup --gid 3434 -S circleci && \
    adduser --uid 3434 --ingroup circleci --disabled-password circleci && \
    echo "circleci ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/circleci && \
    chmod 0440 /etc/sudoers.d/circleci && \
    sudo -u circleci mkdir /home/circleci/project && \
    sudo -u circleci mkdir /home/circleci/.gnupg && \
    sudo -u circleci bash -c "echo 'allow-loopback-pinentry' > /home/circleci/.gnupg/gpg-agent.conf" && \
    sudo -u circleci bash -c "echo 'pinentry-mode loopback' > /home/circleci/.gnupg/gpg.conf" && \
    chmod 700 /home/circleci/.gnupg && chmod 600 /home/circleci/.gnupg/* && \
    rc-update add docker boot

USER circleci

WORKDIR /home/circleci/project
